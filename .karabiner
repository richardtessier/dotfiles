<?xml version="1.0"?>
<root>
  <item>
      <name>Richard's Own Mappings</name>
      <item>
          <name>French Command+ç/^ -> Command+~/`</name>
          <identifier>rtessier.private.global.commandtilde_backquote</identifier>
          <!-- remap for commnad+tilde/backquote-->
          <!--<autogen>__KeyToKey__-->
              <!--KeyCode::BRACKET_RIGHT,VK_COMMAND,-->
              <!--KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L-->
          <!--</autogen>-->
          <!--<autogen>__KeyToKey__-->
              <!--KeyCode::BRACKET_RIGHT,VK_COMMAND|ModifierFlag::NONE,-->
              <!--KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L-->
          <!--</autogen>-->
          <!--<autogen>__KeyToKey-->
              <!--KeyCode::BRACKET_RIGHT, VK_COMMAND|VK_SHIFT|ModifierFlag::NONE,-->
              <!--KeyCode::BACKSLASH, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L-->
          <!--</autogen>-->
          <!--<autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,VK_COMMAND|ModifierFlag::NONE,
              KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L
          </autogen>-->
      </item>
      <item>
          <name>French CMD+[/CMD+] -> CMD+è/CMD+à </name>
          <identifier>rtessier.private.global.commandbracket</identifier>
          <not>CHROME</not>
          <!-- Command+9=C[ Command+0=Command+]-->
          <!-- Useful for Chrome forward & back for example-->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,VK_COMMAND|ModifierFlag::NONE,
              KeyCode::KEY_9, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,VK_COMMAND|ModifierFlag::NONE,
              KeyCode::KEY_0, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L
          </autogen>
      </item>
      <item>
          <name>French CONTROL+CONTROL -> CONTROL+ù </name>
          <identifier>rtessier.private.global.control2</identifier>
          <!-- remap pressing the right control twice to Control+ù, invoking Moom -->
          <autogen>__DoublePressModifier__
              KeyCode::CONTROL_L,
              KeyCode::CONTROL_L, KeyCode::BACKQUOTE,ModifierFlag::CONTROL_L
          </autogen>
          <autogen>__DoublePressModifier__
              KeyCode::COMMAND_L,
              KeyCode::COMMAND_L, KeyCode::BACKQUOTE,ModifierFlag::CONTROL_L
          </autogen>
          <autogen>__DoublePressModifier__
              KeyCode::COMMAND_R,
              KeyCode::COMMAND_R, KeyCode::BACKQUOTE,ModifierFlag::CONTROL_L
          </autogen>
      </item>
      <item>
          <name>Chrome French Mapping</name>
          <identifier>rtessier.private.chrome.french</identifier>
          <appdef>
              <appname>CHROME</appname>
              <equal>com.google.Chrome</equal>
          </appdef>
          <only>CHROME</only>
          <!-- Command+0=TAB,TAB,Command+]-->
          <!-- Useful for Chrome forward & back for example-->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,VK_COMMAND|ModifierFlag::NONE,
              KeyCode::KEY_9, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,VK_COMMAND|ModifierFlag::NONE,
              KeyCode::TAB, KeyCode::TAB, KeyCode::KEY_0, ModifierFlag::COMMAND_L|ModifierFlag::OPTION_L
          </autogen>
      </item>
      <!--<item>-->
          <!--<name>Fix Outlook navigation</name>-->
          <!--<identifier>rtessier.private.outlook</identifier>-->
          <!--<appdef>-->
              <!--<appname>Outlook</appname>-->
              <!--<equal>com.microsoft.Outlook</equal>-->
          <!--</appdef>-->
          <!--<only>Outlook</only>-->
          <!--[>Brackets and curly braces<]-->
          <!---->
          <!--<autogen>__KeyToKey__-->
              <!--KeyCode::CURSOR_RIGHT,VK_COMMAND|ModifierFlag::NONE,-->
              <!--KeyCode::CURSOR_RIGHT,ModifierFlag::COMMAND_R-->
          <!--</autogen>-->
          <!---->
      <!--</item>-->
      <item>
          <name>RStudio Developer for French Keymap</name>
          <identifier>rtessier.private.rstudio</identifier>
          <appdef>
              <appname>RSTUDIO</appname>
              <equal>org.rstudio.RStudio</equal>
          </appdef>
          <only>RSTUDIO</only>

          <!-- %>% facilitating mappign to CMD+.-->
          <autogen>__KeyToKey__
              KeyCode::DOT,VK_COMMAND,
              KeyCode::KEY_5, ModifierFlag::SHIFT_L,
              KeyCode::DOT, ModifierFlag::OPTION_L,
              KeyCode::KEY_5,ModifierFlag::SHIFT_L,
              KeyCode::SPACE
          </autogen>
          <!--Greater than and less than-->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,
              KeyCode::COMMA, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,
              KeyCode::DOT, ModifierFlag::OPTION_L
          </autogen>

          <!--Brackets and curly braces-->
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_CONTROL,
              KeyCode::BRACKET_RIGHT, ModifierFlag::CONTROL_R
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_SHIFT,
              KeyCode::KEY_8, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,VK_SHIFT,
              KeyCode::KEY_7, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,VK_OPTION,
              KeyCode::BRACKET_LEFT,KeyCode::SPACE
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_OPTION,
              KeyCode::BRACKET_RIGHT,ModifierFlag::OPTION_L
          </autogen>

          <!--Shift+è=^, Shift+à=~ (required since we are remapping the ^ and ç keys below) -->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,VK_SHIFT,
              KeyCode::BRACKET_LEFT, KeyCode::SPACE
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,VK_SHIFT,
              KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L
          </autogen>
          <!--<autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::BRACKET_LEFT,ModifierFlag::OPTION_L</autogen>-->

          <!--Backtick-->
          <autogen>__KeyToKey__
              KeyCode::SLASH,
              KeyCode::BRACKET_LEFT,ModifierFlag::OPTION_L,KeyCode::SPACE
          </autogen>

          <!--The direct keys have to be last since they would screw up the mappings with modifiers above-->
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,
              KeyCode::KEY_9, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,
              KeyCode::KEY_0, ModifierFlag::OPTION_L
          </autogen>
      </item>
      <item>
          <name>Vim Developer for French Keymap</name>
          <identifier>rtessier.private.macvim</identifier>
          <appdef>
              <appname>MACVIM</appname>
              <equal>org.vim.MacVim</equal>
          </appdef>
          <only>MACVIM</only>
          <!--Brackets and curly braces-->
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_CONTROL,
              KeyCode::BRACKET_RIGHT, ModifierFlag::CONTROL_R
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_SHIFT,
              KeyCode::KEY_8, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,VK_SHIFT,
              KeyCode::KEY_7, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,VK_OPTION,
              KeyCode::BRACKET_LEFT,KeyCode::SPACE
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,VK_OPTION,
              KeyCode::BRACKET_RIGHT,ModifierFlag::OPTION_L
          </autogen>


          <!--Shift+è=^, Shift+à=~ (required since we are remapping the ^ and ç keys below) -->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,VK_SHIFT,
              KeyCode::BRACKET_LEFT, KeyCode::SPACE
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,VK_SHIFT,
              KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L
          </autogen>
          <!--<autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::BRACKET_LEFT,ModifierFlag::OPTION_L</autogen>-->

          <!--Backtick-->
          <autogen>__KeyToKey__
              KeyCode::SLASH,
              KeyCode::BRACKET_LEFT,ModifierFlag::OPTION_L,KeyCode::SPACE
          </autogen>

          <!--The direct keys have to be last since they would screw up the mappings with modifiers above-->
          <autogen>__KeyToKey__
              KeyCode::BRACKET_LEFT,
              KeyCode::KEY_9, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BRACKET_RIGHT,
              KeyCode::KEY_0, ModifierFlag::OPTION_L
          </autogen>

          <!--Greater than and less than-->
          <autogen>__KeyToKey__
              KeyCode::QUOTE,
              KeyCode::COMMA, ModifierFlag::OPTION_L
          </autogen>
          <autogen>__KeyToKey__
              KeyCode::BACKSLASH,
              KeyCode::DOT, ModifierFlag::OPTION_L
          </autogen>

      </item>
  </item>
  <!--
  <item>
    <name>Swap Space and Tab</name>
    <identifier>private.swap_space_and_tab</identifier>
    <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
    <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::SPACE</autogen>
  </item>

  <item>
    <name>My Excel Hacks (effective only on Excel)</name>
    <appendix>Change Command+2 to Ctrl+U</appendix>
    <appendix>Change Control+A to Home</appendix>
    <appendix>Change Control+E to End</appendix>
    <identifier>private.app_excel_command2_to_ctrlu</identifier>
    <only>EXCEL</only>
    <autogen>__KeyToKey__ KeyCode::KEY_2, VK_COMMAND, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
    <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
    <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
  </item>

  <item>
    <name>My TrackPad LeftClick Hack</name>
    <appendix>Command+LeftClick to F12 (only on MacBookPro2,1 Trackpad)</appendix>
    <identifier>private.pointing_leftclick2f12_trackpad</identifier>
    <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</device_only>
    <autogen>__PointingButtonToKey__ PointingButton::LEFT, VK_COMMAND, KeyCode::F12</autogen>
  </item>
  -->
  <!-- ============================================================ -->
  <!-- An example of appdef -->
  <!--<appdef>
    <appname>APPSTORE</appname>
    <equal>com.apple.appstore</equal>
  </appdef>

  <item>
    <name>Space to Tab on App Store.app</name>
    <identifier>private.appdef</identifier>
    <only>APPSTORE</only>
    <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
  </item>-->

  <!-- ============================================================ -->
  <!-- An example of devicevendordef,deviceproductdef -->
  <!--<devicevendordef>
    <vendorname>HEWLETT_PACKARD</vendorname>
    <vendorid>0x03f0</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>MY_HP_KEYBOARD</productname>
    <productid>0x0224</productid>
  </deviceproductdef>

  <item>
    <name>Space to Tab on MY_HP_KEYBOARD</name>
    <identifier>private.deviceproductdef</identifier>
    <device_only>DeviceVendor::HEWLETT_PACKARD, DeviceProduct::MY_HP_KEYBOARD</device_only>
    <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
  </item>-->

  <!-- ============================================================ -->
</root>
